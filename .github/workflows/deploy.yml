name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    env:
      TESTING: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.6.8'

      - name: Setup Python Virtual Environment
        run: python -m venv python3-virtualenv

      - name: Install Dependencies
        run: python3-virtualenv/bin/pip install -r requirements.txt

      - name: Run tests
        run: ./run-tests.sh

      - name: Send testing success message to Discord
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content= All tests passed. Proceeding to deployment..."
      
  deploy:
    needs: test
    name: "Deploy to AWS EC2 Virtual Machine"
    runs-on: ubuntu-18.04
    steps:
      - name: Configure ssh
        id: ssh
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host my-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}
          AWS_DEFAULT_REGION: us-west-1

      - name: Deploy site
        id: deploy
        run: ssh my-vm 'cd ${{ secrets.PROJECT_ROOT }} && ./redeploy-site.sh && docker compose ps'

      - name: Send success message to Discord
        id: success-msg
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=Deployment successful! ðŸš€"
      
      - name: Check for failures
        if: steps.ssh.outcome != 'success' || steps.deploy.outcome != 'success' || steps.success-msg.outcome != 'success'
        
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment failed"